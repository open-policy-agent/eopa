#!/usr/bin/env bb
(ns cross.build
  (:require [babashka.fs :as fs]
            [babashka.process :refer [shell]]
            [clojure.string :refer [replace-first]]))

(def outputdir      (System/getenv "OUTPUTDIR"))
(def build-release? (not (nil? (System/getenv "RELEASE"))))

(def windows? (= "windows" (System/getenv "GOOS")))
(def name     (if windows? "eopa.exe" "eopa"))
(def testpkgs
  (map #(replace-first % #"^e2e/(.+)/testdata$" "./$1")
    (fs/glob "e2e/cli" "*/testdata")))

(defn build-test [t]
  (shell {:dir "e2e"} "go" "test" "-c" "-tags" "e2e" "-o" (fs/path ".." outputdir) t))
(defn build-mock [mock]
  (shell "go" "build" "-o" outputdir (fs/path "./extras/cmd/" mock)))
(defn build-bin []
  (shell "make" "eopa")
  (fs/copy "bin/eopa" (fs/path outputdir name)))

(defn -main [& args]
  (fs/create-dirs outputdir)
  (run! build-test testpkgs)
  (fs/copy "build/cross-run" outputdir)
  (if build-release? (build-bin)))

(when (= *file* (System/getProperty "babashka.file"))
  (apply -main *command-line-args*))
