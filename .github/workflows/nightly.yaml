name: Nightly
on:
  workflow_dispatch: {} # Allow for manual triggers
  schedule:
    - cron: "0 8 * * 1-5" # Mo-Fr, at 8:00 UTC

env:
  BB_VERSION: 1.3.186

jobs:
  prereqs:
    name: Prereqs
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
      - uses: ./.github/actions/prereqs

  build:
    name: Build and Test
    needs: prereqs
    runs-on: ubuntu-22.04
    steps:
      - name: Tune GitHub-hosted runner network
        uses: smorimoto/tune-github-hosted-runner-network@bb252dcb5c8609a31087e7993daa086f5a1c0069 # ratchet:smorimoto/tune-github-hosted-runner-network@v1
      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be # ratchet:jlumbroso/free-disk-space@v1.3.1
      - name: Generate GitHub App Token
        id: generate_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # ratchet:tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.PLATFORM_AUTOMATION_GH_APP_ID }}
          private_key: ${{ secrets.PLATFORM_AUTOMATION_GH_APP_PEM_KEY }}
      - name: Override GH Token Env Var
        run: echo "GH_API_TOKEN=${{ steps.generate_token.outputs.token }}" >> $GITHUB_ENV
      - uses: open-policy-agent/setup-opa@34a30e8a924d1b03ce2cf7abe97250bbb1f332b5 # ratchet:open-policy-agent/setup-opa@v2
      - name: checkout Enterprise OPA
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
        with:
          fetch-depth: 0
          path: enterprise-opa
      - id: go_version
        name: Read go version
        run: echo "go_version=$(cat .go-version)" >> $GITHUB_OUTPUT
        working-directory: enterprise-opa
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # ratchet:actions/setup-go@v5
        with:
          go-version: ${{ steps.go_version.outputs.go_version }}
          cache-dependency-path: enterprise-opa/go.sum
      - name: Setup github api token
        run: git config --global url.https://git:$GH_API_TOKEN@github.com/StyraInc.insteadOf https://github.com/StyraInc
      - uses: ko-build/setup-ko@d982fec422852203cfb2053a8ec6ad302280d04d # ratchet:ko-build/setup-ko@v0.8
      - name: Build
        run: make build
        env:
          SKIP_IMAGES: true
        working-directory: enterprise-opa
      - name: Upload image tarball
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # ratchet:actions/upload-artifact@v4
        with:
          name: image
          path: enterprise-opa/local.tar
      - name: pick up eopa data
        id: enterprise-opa
        run: |
          echo "opa_version=v$(build/get-opa-version.sh)" >> $GITHUB_OUTPUT
          echo "image=$(docker load --quiet --input local.tar | awk '{print $3}')" >> $GITHUB_OUTPUT
          echo "bundles=$(pwd)/e2e" >> $GITHUB_OUTPUT
        working-directory: enterprise-opa
      - name: pick up paths
        id: paths
        run: |
          echo "fetchdb=$(pwd)/_fetchdb" >> $GITHUB_OUTPUT
          echo "opa_dir=$(pwd)/opa" >> $GITHUB_OUTPUT
      - name: checkout OPA
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
        with:
          repository: open-policy-agent/opa
          ref: ${{ steps.enterprise-opa.outputs.opa_version }}
          path: opa
      - name: checkout opa-testing-e2e
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
        with:
          repository: StyraInc/opa-testing-e2e
          path: _e2e
          token: ${{ steps.generate_token.outputs.token }}
          persist-credentials: false
      - name: run "opa-testing-e2e"
        run: make test
        working-directory: _e2e
        env:
          EOPA_LICENSE_TOKEN: ${{ secrets.STYRA_LOAD_LICENSE_TOKEN }}
          IMAGE: ${{ steps.enterprise-opa.outputs.image }}
          BUNDLES: ${{ steps.enterprise-opa.outputs.bundles }}
          BUNDLE_FILE_PATH: bundles/systems/bc01d50d17d7446684c4e6c34a1ad07f
          NUM_INPUT_BUNDLES: 2
          BUNDLE_HOST: 172.17.0.1
      - name: Check out fetchdb code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
        with:
          path: _fetchdb
          repository: StyraInc/fetchdb
          token: ${{ steps.generate_token.outputs.token }}
          persist-credentials: false
      - name: Run enterprise-opa-test (fetchdb)
        run: |
          sed -i 's#ghcr.io/styrainc/.*:latest test -v#${{ steps.enterprise-opa.outputs.image }} test --v0-compatible -v#' ${{ steps.paths.outputs.fetchdb}}/Makefile
          cd enterprise-opa/e2e && go test -tags e2e_fetchdb ./fetchdb
        env:
          FETCHDB_DIRECTORY: ${{ steps.paths.outputs.fetchdb }}

  race:
    name: Race Detector
    needs: prereqs
    runs-on: ubuntu-22.04
    steps:
      - name: Tune GitHub-hosted runner network
        uses: smorimoto/tune-github-hosted-runner-network@bb252dcb5c8609a31087e7993daa086f5a1c0069 # ratchet:smorimoto/tune-github-hosted-runner-network@v1
      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be # ratchet:jlumbroso/free-disk-space@v1.3.1
      - name: Generate GitHub App Token
        id: generate_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # ratchet:tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.PLATFORM_AUTOMATION_GH_APP_ID }}
          private_key: ${{ secrets.PLATFORM_AUTOMATION_GH_APP_PEM_KEY }}
      - name: Override GH Token Env Var
        run: echo "GH_API_TOKEN=${{ steps.generate_token.outputs.token }}" >> $GITHUB_ENV
      - uses: open-policy-agent/setup-opa@34a30e8a924d1b03ce2cf7abe97250bbb1f332b5 # ratchet:open-policy-agent/setup-opa@v2
      - name: checkout Enterprise OPA
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
        with:
          fetch-depth: 0
          path: enterprise-opa
      - id: go_version
        name: Read go version
        run: echo "go_version=$(cat .go-version)" >> $GITHUB_OUTPUT
        working-directory: enterprise-opa
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # ratchet:actions/setup-go@v5
        with:
          go-version: ${{ steps.go_version.outputs.go_version }}
          cache-dependency-path: enterprise-opa/go.sum
      - name: Setup github api token
        run: git config --global url.https://git:$GH_API_TOKEN@github.com/StyraInc.insteadOf https://github.com/StyraInc
      - name: pick up eopa data
        id: enterprise-opa
        run: |
          echo "opa_version=v$(build/get-opa-version.sh)" >> $GITHUB_OUTPUT
          echo "image=$(docker load --quiet --input local.tar | awk '{print $3}')" >> $GITHUB_OUTPUT
          echo "bundles=$(pwd)/e2e" >> $GITHUB_OUTPUT
        working-directory: enterprise-opa
      - name: pick up paths
        id: paths
        run: |
          echo "fetchdb=$(pwd)/_fetchdb" >> $GITHUB_OUTPUT
          echo "opa_dir=$(pwd)/opa" >> $GITHUB_OUTPUT
      - name: checkout OPA
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
        with:
          repository: open-policy-agent/opa
          ref: ${{ steps.enterprise-opa.outputs.opa_version }}
          path: opa
      - run: make test-race
        working-directory: enterprise-opa
        env:
          OPA_ROOT: ${{ steps.paths.outputs.opa_dir }}

  goreleaser:
    name: GoReleaser
    needs: prereqs
    runs-on: ubuntu-22.04
    env:
      QUILL_SIGN_P12: ${{ secrets.QUILL_SIGN_P12 }} # base64 encoded contents
      QUILL_SIGN_PASSWORD: ${{ secrets.QUILL_SIGN_PASSWORD }} # p12 password
      QUILL_NOTARY_KEY: ${{ secrets.QUILL_NOTARY_KEY }}
      QUILL_NOTARY_KEY_ID: ${{ secrets.QUILL_NOTARY_KEY_ID }}
      QUILL_NOTARY_ISSUER: ${{ secrets.QUILL_NOTARY_ISSUER }}
    steps:
      - name: Tune GitHub-hosted runner network
        uses: smorimoto/tune-github-hosted-runner-network@bb252dcb5c8609a31087e7993daa086f5a1c0069 # ratchet:smorimoto/tune-github-hosted-runner-network@v1
      - name: Free disk space
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo apt clean
          docker rmi $(docker image ls -aq)
          df -h
      - name: Generate GitHub App Token
        id: generate_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # ratchet:tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.PLATFORM_AUTOMATION_GH_APP_ID }}
          private_key: ${{ secrets.PLATFORM_AUTOMATION_GH_APP_PEM_KEY }}
      - name: Override GH Token Env Var
        run: echo "GH_API_TOKEN=${{ steps.generate_token.outputs.token }}" >> $GITHUB_ENV
      - uses: open-policy-agent/setup-opa@34a30e8a924d1b03ce2cf7abe97250bbb1f332b5 # ratchet:open-policy-agent/setup-opa@v2
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
        with:
          fetch-depth: 0
      - id: go_version
        name: Read go version
        run: echo "go_version=$(cat .go-version)" >> $GITHUB_OUTPUT
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # ratchet:actions/setup-go@v5
        with:
          go-version: ${{ steps.go_version.outputs.go_version }}
      - name: setup github api token
        run: git config --global url.https://git:$GH_API_TOKEN@github.com/.insteadOf https://github.com/
      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@90a3faa9d0182683851fbfa97ca1a2cb983bfca3 # ratchet:goreleaser/goreleaser-action@v6
        with:
          install-only: true
      - name: Install anchore/quill (macos signing)
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/quill/main/install.sh |\
          sh -s -- -b /usr/local/bin
      - name: Make GoReleaser
        run: make release
        env:
          HOSTNAME: github.actions.local
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
      - name: Upload release artifacts
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # ratchet:actions/upload-artifact@v4
        with:
          name: binaries
          path: |
            dist/checksums.txt
            dist/*build_*/*

  cross-build:
    name: Cross Build
    needs: prereqs
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: true
      matrix:
        include:
          - GOOS: linux
            GOARCH: amd64
          - GOOS: linux
            GOARCH: arm64
          - GOOS: darwin
            GOARCH: amd64
          - GOOS: windows
            GOARCH: amd64
    steps:
      - name: Tune GitHub-hosted runner network
        uses: smorimoto/tune-github-hosted-runner-network@bb252dcb5c8609a31087e7993daa086f5a1c0069 # ratchet:smorimoto/tune-github-hosted-runner-network@v1
      - name: Free disk space
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo apt clean
          docker rmi $(docker image ls -aq)
          df -h
        if: matrix.os == 'ubuntu-22.04'
      - name: Generate GitHub App Token
        id: generate_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # ratchet:tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.PLATFORM_AUTOMATION_GH_APP_ID }}
          private_key: ${{ secrets.PLATFORM_AUTOMATION_GH_APP_PEM_KEY }}
      - name: Override GH Token Env Var
        run: echo "GH_API_TOKEN=${{ steps.generate_token.outputs.token }}" >> $GITHUB_ENV
      - name: setup github api token
        run: git config --global url.https://git:$GH_API_TOKEN@github.com/.insteadOf https://github.com/
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
      - id: go_version
        name: Read go version
        run: echo "go_version=$(cat .go-version)" >> $GITHUB_OUTPUT
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # ratchet:actions/setup-go@v5
        with:
          go-version: ${{ steps.go_version.outputs.go_version }}
      - uses: turtlequeue/setup-babashka@2d4df498c7a578b4f3e906283f9af913590bdec7 # ratchet:turtlequeue/setup-babashka@v1.7.0
        with:
          babashka-version: ${{ env.BB_VERSION }}
      - run: bb build/cross-build
        env:
          OUTPUTDIR: bins
          GOOS: ${{ matrix.GOOS }}
          GOARCH: ${{ matrix.GOARCH }}
      - name: Upload test binaries
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # ratchet:actions/upload-artifact@v4
        with:
          name: cross-binaries-${{ matrix.GOOS }}-${{ matrix.GOARCH }}
          path: bins

  cross-test-releases:
    name: Cross Test Releases
    runs-on: ${{ matrix.os }}
    needs:
      - goreleaser
      - cross-build
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            GOOS: linux
            GOARCH: amd64
          - os: ubuntu-22.04
            GOOS: linux
            GOARCH: arm64
          - os: macos-latest
            GOOS: darwin
            GOARCH: amd64
          - os: windows-latest
            GOOS: windows
            GOARCH: amd64
    steps:
      - name: Tune GitHub-hosted runner network
        uses: smorimoto/tune-github-hosted-runner-network@bb252dcb5c8609a31087e7993daa086f5a1c0069 # ratchet:smorimoto/tune-github-hosted-runner-network@v1
        if: matrix.os != 'windows-latest'
      - name: Free disk space
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo apt clean
          docker rmi $(docker image ls -aq)
          df -h
        if: matrix.os == 'ubuntu-22.04'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # ratchet:docker/setup-qemu-action@v3
        with:
          platforms: arm64
        if: matrix.GOARCH == 'arm64'
      - name: Download release binaries
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # ratchet:actions/download-artifact@v4
        with:
          name: binaries
          path: dist
      - name: Download test binaries
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # ratchet:actions/download-artifact@v4
        with:
          name: cross-binaries-${{ matrix.GOOS }}-${{ matrix.GOARCH }}
          path: bins
      - uses: turtlequeue/setup-babashka@2d4df498c7a578b4f3e906283f9af913590bdec7 # ratchet:turtlequeue/setup-babashka@v1.7.0
        with:
          babashka-version: ${{ env.BB_VERSION }}
      - run: cp dist/*${{ matrix.GOOS }}_${{ matrix.GOARCH }}*/* bins
      - run: bb bins/cross-run
        env:
          EOPA_LICENSE_TOKEN: ${{ secrets.STYRA_LOAD_LICENSE_TOKEN }}

  trivy-scan-image:
    name: Trivy security scan image
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Tune GitHub-hosted runner network
        uses: smorimoto/tune-github-hosted-runner-network@bb252dcb5c8609a31087e7993daa086f5a1c0069 # ratchet:smorimoto/tune-github-hosted-runner-network@v1
      - name: Checkout code # needed for .trivyignore file
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download image tarball
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # ratchet:actions/download-artifact@v4
        with:
          name: image
      - name: Enterprise OPA image
        id: enterprise-opa
        run: echo "image=$(docker load --quiet --input local.tar | awk '{print $3}')" >> $GITHUB_OUTPUT
        # Equivalent to:
        # $ trivy image $IMAGE
      - name: Run Trivy scan on image
        uses: aquasecurity/trivy-action@18f2510ee396bbf400402947b394f2dd8c87dbb0 # ratchet:aquasecurity/trivy-action@0.29.0
        with:
          image-ref: ${{ steps.enterprise-opa.outputs.image }}
          format: table
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH
        env:
          TRIVY_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-db,public.ecr.aws/aquasecurity/trivy-db

  trivy-scan-repo:
    name: Trivy security scan repo
    needs: prereqs
    runs-on: ubuntu-22.04
    steps:
      - name: Tune GitHub-hosted runner network
        uses: smorimoto/tune-github-hosted-runner-network@bb252dcb5c8609a31087e7993daa086f5a1c0069 # ratchet:smorimoto/tune-github-hosted-runner-network@v1

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4

      # Equivalent to:
      # $ trivy fs .
      - name: Run Trivy scan on repo
        uses: aquasecurity/trivy-action@18f2510ee396bbf400402947b394f2dd8c87dbb0 # ratchet:aquasecurity/trivy-action@0.29.0
        with:
          scan-type: fs
          format: table
          exit-code: "1"
          ignore-unfixed: true
          severity: CRITICAL,HIGH
        env:
          TRIVY_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-db,public.ecr.aws/aquasecurity/trivy-db

  govulncheck:
    name: Go vulnerability check
    needs: prereqs
    runs-on: ubuntu-22.04
    steps:
      - name: Tune GitHub-hosted runner network
        uses: smorimoto/tune-github-hosted-runner-network@bb252dcb5c8609a31087e7993daa086f5a1c0069 # ratchet:smorimoto/tune-github-hosted-runner-network@v1
      - name: Generate GitHub App Token
        id: generate_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # ratchet:tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.PLATFORM_AUTOMATION_GH_APP_ID }}
          private_key: ${{ secrets.PLATFORM_AUTOMATION_GH_APP_PEM_KEY }}
      - name: Override GH Token Env Var
        run: echo "GH_API_TOKEN=${{ steps.generate_token.outputs.token }}" >> $GITHUB_ENV
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
      - id: go_version
        name: Read go version
        run: echo "go_version=$(cat .go-version)" >> $GITHUB_OUTPUT
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # ratchet:actions/setup-go@v5
        with:
          go-version: ${{ steps.go_version.outputs.go_version }}
      - name: setup github token
        run: git config --global url.https://git:$GH_API_TOKEN@github.com/StyraInc.insteadOf https://github.com/StyraInc
      - run: go install golang.org/x/vuln/cmd/govulncheck@latest
      - run: govulncheck -tags use_opa_fork ./...

  fuzzer:
    name: Go Fuzzer
    needs: prereqs
    runs-on: ubuntu-22.04
    steps:
      - name: Tune GitHub-hosted runner network
        uses: smorimoto/tune-github-hosted-runner-network@bb252dcb5c8609a31087e7993daa086f5a1c0069 # ratchet:smorimoto/tune-github-hosted-runner-network@v1
      - name: Free disk space
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo apt clean
          docker rmi $(docker image ls -aq)
          df -h
      - name: Generate GitHub App Token
        id: generate_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # ratchet:tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.PLATFORM_AUTOMATION_GH_APP_ID }}
          private_key: ${{ secrets.PLATFORM_AUTOMATION_GH_APP_PEM_KEY }}
      - name: Override GH Token Env Var
        run: echo "GH_API_TOKEN=${{ steps.generate_token.outputs.token }}" >> $GITHUB_ENV
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
      - id: go_version
        name: Read go version
        run: echo "go_version=$(cat .go-version)" >> $GITHUB_OUTPUT
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # ratchet:actions/setup-go@v5
        with:
          go-version: ${{ steps.go_version.outputs.go_version }}
      - name: setup github token
        run: git config --global url.https://git:$GH_API_TOKEN@github.com/StyraInc.insteadOf https://github.com/StyraInc
      - run: make fuzz
      - name: Dump crashers
        if: ${{ failure() }}
        run: |
          cd pkg/json/testdata/fuzz
          git add -A
          git diff HEAD

  analyze:
    name: CodeQL
    needs: prereqs
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Tune GitHub-hosted runner network
        uses: smorimoto/tune-github-hosted-runner-network@bb252dcb5c8609a31087e7993daa086f5a1c0069 # ratchet:smorimoto/tune-github-hosted-runner-network@v1

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@6bb031afdd8eb862ea3fc1848194185e076637e5 # ratchet:github/codeql-action/init@v3
        with:
          languages: go

      - name: Autobuild
        uses: github/codeql-action/autobuild@6bb031afdd8eb862ea3fc1848194185e076637e5 # ratchet:github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@6bb031afdd8eb862ea3fc1848194185e076637e5 # ratchet:github/codeql-action/analyze@v3
        with:
          category: "/language:go"
