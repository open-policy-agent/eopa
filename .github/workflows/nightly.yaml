name: Nightly
on:
  workflow_dispatch: {}   # Allow for manual triggers
  schedule:
    - cron:  '0 8 * * *'  # Daily, at 8:00 UTC

jobs:
  build:
    name: Ko Build
    runs-on: ubuntu-22.04
    environment: ci
    env:
      GH_API_TOKEN: ${{ secrets.GH_API_TOKEN }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          check-latest: true
      - uses: open-policy-agent/setup-opa@v2
      - name: Setup github api token
        run: git config --global url.https://$GH_API_TOKEN@github.com/.insteadOf https://github.com/
      - uses: ko-build/setup-ko@v0.6
      - name: Build
        run: make build
      - name: Upload image tarball
        uses: actions/upload-artifact@v3
        with:
          name: image
          path: local.tar

  trivy-scan-image:
    name: Trivy security scan image
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Checkout code # needed for .trivyignore file
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Download image tarball
        uses: actions/download-artifact@v3
        with:
          name: image
      - name: Enterprise OPA image
        id: enterprise-opa
        run: echo "image=$(docker load --quiet --input local.tar | awk '{print $3}')" >> $GITHUB_OUTPUT
        # Equivalent to:
        # $ trivy image $IMAGE
      - name: Run Trivy scan on image
        uses: aquasecurity/trivy-action@0.11.2
        with:
          image-ref: ${{ steps.enterprise-opa.outputs.image }}
          format: table
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH

  trivy-scan-repo:
    name: Trivy security scan repo
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Equivalent to:
      # $ trivy fs .
      - name: Run Trivy scan on repo
        uses: aquasecurity/trivy-action@0.11.2
        with:
          scan-type: fs
          format: table
          exit-code: '1'
          ignore-unfixed: true
          severity: CRITICAL,HIGH

  govulncheck:
    name: Go vulnerability check
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          check-latest: true

      - run: go install golang.org/x/vuln/cmd/govulncheck@latest
      - run: govulncheck ./...

  fuzzer:
    name: Go Fuzzer
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          check-latest: true
      - run: make fuzz
      - name: Dump crashers
        if: ${{ failure() }}
        run: |
          cd pkg/json/testdata/fuzz
          git add -A
          git diff HEAD

  analyze:
    name: CodeQL
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: go

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:go"
