name: Publish

on:
  push:
    tags:
      - v[0-9].**

env:
  GOPRIVATE: github.com/StyraInc/opa

jobs:
  goreleaser:
    name: GoReleaser
    runs-on: ubuntu-22.04
    needs:
    - kopush
    - proto-docs-push
    environment: ci
    env:
      GH_API_TOKEN: ${{ secrets.GH_API_TOKEN }}
      QUILL_SIGN_P12: ${{ secrets.QUILL_SIGN_P12 }} # base64 encoded contents
      QUILL_SIGN_PASSWORD: ${{ secrets.QUILL_SIGN_PASSWORD }} # p12 password
      QUILL_NOTARY_KEY: ${{ secrets.QUILL_NOTARY_KEY }}
      QUILL_NOTARY_KEY_ID: ${{ secrets.QUILL_NOTARY_KEY_ID }}
      QUILL_NOTARY_ISSUER: ${{ secrets.QUILL_NOTARY_ISSUER }}
    steps:
      - name: Generate GitHub App Token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.PLATFORM_AUTOMATION_GH_APP_ID }}
          private_key: ${{ secrets.PLATFORM_AUTOMATION_GH_APP_PEM_KEY }}
      - name: (Dependabot Only) Override GH Token Env Var
        if: ${{ github.actor == 'dependabot[bot]' }}
        id: override_gh_api_token
        run:
          echo "GH_API_TOKEN=${{ steps.generate_token.outputs.token }}" >> $GITHUB_ENV
      - uses: open-policy-agent/setup-opa@v2
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          check-latest: true
      - name: Setup github api token
        run: git config --global url.https://git:$GH_API_TOKEN@github.com/.insteadOf https://github.com/
      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          install-only: true
      - name: Install anchore/quill (macos signing)
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/quill/main/install.sh |\
          sh -s -- -b /usr/local/bin
      - name: Run GoReleaser
        run: make release-ci
        env:
          HOSTNAME: github.actions.local
          TAP_GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          GITHUB_TOKEN: ${{ secrets.GH_API_TOKEN }}

  kopush:
    name: Ko Push
    runs-on: ubuntu-22.04
    environment: ci
    env:
      GH_API_TOKEN: ${{ secrets.GH_API_TOKEN }}
    steps:
      - name: (Dependabot Only) Generate GitHub App Token
        if: ${{ github.actor == 'dependabot[bot]' }}
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.PLATFORM_AUTOMATION_GH_APP_ID }}
          private_key: ${{ secrets.PLATFORM_AUTOMATION_GH_APP_PEM_KEY }}
      - name: (Dependabot Only) Override GH Token Env Var
        if: ${{ github.actor == 'dependabot[bot]' }}
        id: override_gh_api_token
        run:
          echo "GH_API_TOKEN=${{ steps.generate_token.outputs.token }}" >> $GITHUB_ENV
      - uses: open-policy-agent/setup-opa@v2
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          check-latest: true
      - name: Setup github api token
        run: git config --global url.https://git:$GH_API_TOKEN@github.com/.insteadOf https://github.com/
      - uses: ko-build/setup-ko@v0.6
      - name: Build and Push Images
        run: make auth-deploy-ci-debug auth-deploy-ci
        env:
          AUTH_RELEASE: ${{ github.ref_name }}

  proto-docs-push:
    name: Push Protobuf docs to BSR
    runs-on: ubuntu-22.04
    environment: ci
    env:
      GH_API_TOKEN: ${{ secrets.GH_API_TOKEN }}
      BUF_TOKEN: ${{ secrets.BUF_TOKEN }}
    steps:
      - name: (Dependabot Only) Generate GitHub App Token
        if: ${{ github.actor == 'dependabot[bot]' }}
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.PLATFORM_AUTOMATION_GH_APP_ID }}
          private_key: ${{ secrets.PLATFORM_AUTOMATION_GH_APP_PEM_KEY }}
      - name: (Dependabot Only) Override GH Token Env Var
        if: ${{ github.actor == 'dependabot[bot]' }}
        id: override_gh_api_token
        run:
          echo "GH_API_TOKEN=${{ steps.generate_token.outputs.token }}" >> $GITHUB_ENV
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # Note(philip): We need to install the `buf` CLI before we can lint our protobuf sources.
      # The action uses the repo-scoped GITHUB_TOKEN to allow one of its dependencies (Octokit)
      # to skip Github API rate limits when fetching the latest buf build artifact.
      - uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      # Note(philip): We do not use bufbuild/buf-push-action@v1 here, because that action
      # always creates docs under the Git commit SHA, and we'd like to have nice semver-style
      # tag names for releases.
      - name: Manually publish to BSR
        run:
          buf push proto --tag ${{ github.ref_name }}
