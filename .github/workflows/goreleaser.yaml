name: Manual Goreleaser run

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to release"
        required: true

jobs:
  prereqs:
    name: Prereqs
    runs-on: ubuntu-24.04
    steps:
      - uses: StyraOSS/styra-init-action@main

  goreleaser:
    name: GoReleaser
    needs: prereqs
    runs-on: ubuntu-24.04
    env:
      QUILL_SIGN_P12: ${{ secrets.QUILL_SIGN_P12 }} # base64 encoded contents
      QUILL_SIGN_PASSWORD: ${{ secrets.QUILL_SIGN_PASSWORD }} # p12 password
      QUILL_NOTARY_KEY: ${{ secrets.QUILL_NOTARY_KEY }}
      QUILL_NOTARY_KEY_ID: ${{ secrets.QUILL_NOTARY_KEY_ID }}
      QUILL_NOTARY_ISSUER: ${{ secrets.QUILL_NOTARY_ISSUER }}
      CERT_ID: ${{ secrets.CERT_ID }}
      SM_API_KEY: ${{ secrets.SM_API_KEY }}
      SM_CLIENT_CERT_FILE: ${{ github.workspace }}/bot-client-auth-cert.p12
      SM_CLIENT_CERT_PASSWORD: ${{ secrets.SM_CLIENT_CERT_PASSWORD }}
    steps:
      - name: Tune GitHub-hosted runner network
        uses: smorimoto/tune-github-hosted-runner-network@bb252dcb5c8609a31087e7993daa086f5a1c0069 # v1.0.0
      - uses: open-policy-agent/setup-opa@950f159a49aa91f9323f36f1de81c7f6b5de9576 # v2.3.0
      - name: Check out code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          path: enterprise-opa
          ref: ${{ inputs.tag }}
      - id: go_version
        name: Read go version
        run: echo "go_version=$(cat .go-version)" >> $GITHUB_OUTPUT
        working-directory: enterprise-opa
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: ${{ steps.go_version.outputs.go_version }}
          cache-dependency-path: enterprise-opa/go.sum
      - name: Setup github api token
        run: git config --global url.https://git:$GH_API_TOKEN@github.com/.insteadOf https://github.com/
      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        with:
          install-only: true
      - name: Install anchore/quill (macos signing)
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/quill/main/install.sh |\
          sh -s -- -b /usr/local/bin
      - name: Set up Java
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          java-version: 17
          distribution: "temurin"
      - name: Download Jsign + add script to PATH
        run: |
          wget https://github.com/ebourg/jsign/releases/download/7.1/jsign-7.1.jar
          echo "#!/usr/bin/env bash" >> jsign
          echo "java -jar $GITHUB_WORKSPACE/jsign-7.1.jar \"\$@\"" >> jsign
          chmod +x jsign
          echo $GITHUB_WORKSPACE >> $GITHUB_PATH
      - name: Extract client authentication cert
        run: echo $SM_CLIENT_CERT_FILE_BASE64 | base64 --decode > bot-client-auth-cert.p12
        env:
          SM_CLIENT_CERT_FILE_BASE64: ${{ secrets.SM_CLIENT_CERT_FILE_BASE64 }}
      - name: Install goversioninfo for Windows binary icon and version
        run: go install github.com/josephspurrier/goversioninfo/cmd/goversioninfo@v1.5.0
      - name: Run GoReleaser
        # NOTE(sr): not calling the Makefile target here, since we've checked out a previous tag
        run: |
          VER=${{ inputs.tag }}
          export EOPA_VERSION=${VER:1}
          ./build/latest-release-notes.sh --output="${RELEASE_NOTES}"
          goreleaser release --clean --release-notes "${RELEASE_NOTES}" --timeout=60m
        working-directory: enterprise-opa
        env:
          HOSTNAME: github.actions.local
          TAP_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_NOTES: ../release-notes.md
      - name: Upload binary artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: windows-binaries
          if-no-files-found: error
          path: |
            enterprise-opa/dist/windows*/*.exe

  verify-authenticode-signature:
    name: Verify signature
    runs-on: ubuntu-24.04
    needs: goreleaser
    steps:
      - name: Tune GitHub-hosted runner network
        uses: smorimoto/tune-github-hosted-runner-network@bb252dcb5c8609a31087e7993daa086f5a1c0069 # v1.0.0
      - name: Check out code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - name: Download generated artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: windows-binaries
          path: windows-binaries
      - name: Get Root CA certificate.
        run: curl -x GET https://cacerts.digicert.com/DigiCertTrustedRootG4.crt.pem > rootca.pem
      - name: Install osslsigncode
        run: |
          sudo apt-get update
          sudo apt-get install -y osslsigncode
      - name: Verify signature
        run: |
          for file in $(ls windows-binaries/**/*.exe); do
            echo "Processing $file"
            osslsigncode verify -CAfile rootca.pem -TSA-CAfile rootca.pem $file
          done
