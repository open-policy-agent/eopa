project_name: eopa
version: 2

env:
  - CGO_ENABLED=0

builds:
  - id: linux-build
    goos:
      - linux
    goarch:
      - amd64
      - arm64
    tags:
    ldflags: &ldflags
      - -s
      - -X github.com/open-policy-agent/eopa/internal/version.Version={{.Env.EOPA_VERSION}}
      - -X github.com/open-policy-agent/eopa/internal/version.Hostname=github.actions.local
      - -X github.com/open-policy-agent/opa/internal/report.ExternalServiceURL={{.Env.EOPA_TELEMETRY_URL}}
  - id: darwin-build
    goos:
      - darwin
    goarch:
      - amd64
      - arm64
    tags:
    ldflags: *ldflags
    # hooks:
    #   post:
    #     # The binary is signed and notarized when running a production release,
    #     # but for snapshot builds notarization is skipped and only ad-hoc
    #     # signing is performed (not cryptographic material is needed).
    #     #
    #     # note: environment variables required for signing
    #     #   QUILL_SIGN_P12, QUILL_SIGN_PASSWORD
    #     # Don't sign snapshots, signing is beneficial if you do
    #     # download the snapshot/pr build from the GHA artifact,
    #     # but it also adds extra time to each build.
    #     - cmd: quill sign-and-notarize "{{ .Path }}" --dry-run={{ .IsSnapshot }} --ad-hoc={{ .IsSnapshot }} -vv
    #       env:
    #         - QUILL_LOG_FILE=/tmp/quill-{{ .Target }}.log
  - id: windows-build
    goos:
      - windows
    goarch:
      - amd64
    tags:
    ldflags: *ldflags
    hooks:
      pre:
        # Embeds metadata and an icon into the executable at build-time.
        - cmd: build/gen-windows-versioninfo.sh
      # post:
      #   # The binary is signed / timestamped when running a production release,
      #   # but for snapshot builds we skip it.
      #   #
      #   # note: environment variables required for signing
      #   #   CERT_ID, SM_API_KEY, SM_CLIENT_CERT_FILE, SM_CLIENT_CERT_PASSWORD JSIGN_JAR_PATH
      #   # Don't sign snapshots, because the remote cert has a limited
      #   # quota of remote signings per year.
      #   - cmd: ./build/jsign-authenticode.sh "{{ .Path }}" --dry-run={{ .IsSnapshot }} --jar-path="{{ indexOrDefault .Env "JSIGN_JAR_PATH" "" }}"

archives:
  - id: binary
    formats: binary
    files:
      - none*
    # example: eopa_Darwin_arm64
    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}

checksum:
  name_template: "checksums.txt"

changelog:

release:
  github:
    owner: open-policy-agent
    name: eopa
