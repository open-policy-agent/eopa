# This test ensures that `eopa eval` correctly accepts extra data to insert
# into the `data.` hierarchy from the .opa.yaml config file.
#
# We also make sure to test loading more than one path, one of which is a
# directory, to make sure nothing in the way we handled the config file
# broke that functionality.
exec eopa eval -f pretty '[data.foo.bar, data.coolstuff.foobar]'
! stderr .
cmp stdout exp/stdout

exec eopa eval -f pretty data
! stderr .
cmp stdout exp-data/stdout

-- dummy1.rego --
package foo
bar := "abc"
-- cooldir/dummy2.rego --
package coolstuff
foobar := "quux"
-- cooldir/dummy2.json --
{"foo2":"bear"}
-- .opa.yaml --
data:
  ./dummy1.rego
  ./cooldir
-- exp/stdout --
[
  "abc",
  "quux"
]
-- exp-data/stdout --
{
  "coolstuff": {
    "foobar": "quux"
  },
  "foo": {
    "bar": "abc"
  },
  "foo2": "bear"
}
