# This test is for `eopa test new`, and has the following concerns:
# - Can add a new test to an existing test file.
# - Context: single Rego file.

exec eopa test new -d example.rego 'allow_x'
! stdout .
cmp stderr exp/stderr
cmp example_test.rego exp/example_test.rego

-- example.rego --
package example

allow {
	input.servers[_].names[_]
	input.clients[_]
}

# METADATA
# custom:
#   test-bootstrap-name: allow_x
allow {
	input.x
}
-- example_test.rego --
package example_test

import rego.v1

# Testcases generated from: example.rego:3
# Success case: All inputs defined.
test_success_example_allow_0 if {
	test_input = {"input": {"clients": "EXAMPLE", "servers": "EXAMPLE"}}
	data.example.allow with input as test_input
}
# Failure case: No inputs defined.
test_fail_example_allow_0_no_input if {
	test_input = {}
	not data.example.allow with input as test_input
}
# Failure case: Inputs defined, but wrong values.
test_fail_example_allow_0_bad_input if {
	test_input = {"input": {"clients": "EXAMPLE", "servers": "EXAMPLE"}}
	not data.example.allow with input as test_input
}

-- exp/example_test.rego --
package example_test

import rego.v1

# Testcases generated from: example.rego:3
# Success case: All inputs defined.
test_success_example_allow_0 if {
	test_input = {"input": {"clients": "EXAMPLE", "servers": "EXAMPLE"}}
	data.example.allow with input as test_input
}
# Failure case: No inputs defined.
test_fail_example_allow_0_no_input if {
	test_input = {}
	not data.example.allow with input as test_input
}
# Failure case: Inputs defined, but wrong values.
test_fail_example_allow_0_bad_input if {
	test_input = {"input": {"clients": "EXAMPLE", "servers": "EXAMPLE"}}
	not data.example.allow with input as test_input
}


# Testcases generated from: example.rego:11
# Success case: All inputs defined.
test_success_allow_x if {
	test_input = {"input": {"x": "EXAMPLE"}}
	data.example.allow with input as test_input
}
# Failure case: No inputs defined.
test_fail_allow_x_no_input if {
	test_input = {}
	not data.example.allow with input as test_input
}
# Failure case: Inputs defined, but wrong values.
test_fail_allow_x_bad_input if {
	test_input = {"input": {"x": "EXAMPLE"}}
	not data.example.allow with input as test_input
}

-- exp/stderr --
[INFO] Generating testcases for annotation 'allow_x'. File destination will be: 'example_test.rego'

